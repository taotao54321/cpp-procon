#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import argparse
from pathlib import Path

def get_dir():
    return Path(__file__).resolve().parent

def create_cpp(base, name):
    hpps = (
        "procon.hpp",
        "random.hpp",
        "string.hpp",
        "prufer.hpp",
        "gen.hpp",
    )
    hdrs = tuple(open(base/"include"/hpp,"r").read() for hpp in hpps)
    body = open(base/"tmpl"/"gen.cpp", "r").read()
    try:
        with open(name, "x") as out:
            out.write("\n".join(hdrs))
            out.write(body)
        print(name)
    except FileExistsError:
        return

def create_makefile(base):
    NAME = "Makefile"
    body = open(base/"tmpl"/"Makefile", "r").read()
    try:
        with open(NAME, "x") as out:
            out.write(body)
        print(NAME)
    except FileExistsError:
        return

def parse_args():
    ap = argparse.ArgumentParser()
    ap.add_argument("name", nargs="?", default="gen.cpp")
    return ap.parse_args()

def main():
    args = parse_args()

    base = get_dir()

    create_cpp(base, args.name)
    create_makefile(base)

if __name__ == "__main__": main()
